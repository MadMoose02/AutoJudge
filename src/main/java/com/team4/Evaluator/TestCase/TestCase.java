package com.team4.Evaluator.TestCase;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * A concrete implementation of the AbstractTestCase interface that serves as a Template class that 
 * defines the structure of an AbstractTestCase object
 */
public abstract class TestCase implements AbstractTestCase {

    // Attributes

    /** The maximum number of lines that will be considered for evaluation in a submission File */
    protected final static int MAX_LINES = 500; 

    /** The name of the test case */
    protected String testName;

    /** The File object to test */
    protected File testFile;

    /** The required parameters or details to pass the test case */
    protected ArrayList<String> parameters;

    /** The String containing formatted feedback comments generated by the test case */
    protected String feedbackComments;

    /**
     * Default constructor for a TestCase object
     * @param testName   The name of the test case
     * @param testFile   The file to test
     * @param parameters The parameters to pass the test case
     */
    public TestCase(String testName, File testFile, String[] parameters) {
        this.testName = testName;
        this.testFile = testFile;
        this.parameters = (parameters != null) ? new ArrayList<>(List.of(parameters)) : new ArrayList<>();
    }


    // Getters

    /**
     * Gets the name of the test case
     * @return String containing the name of the test case
     */
    public String getTestName() { return this.testName; }

    /**
     * Gets the feedback comments generated by the test case
     */
    public String getFeedbackComments() { return this.feedbackComments; }


    // Abstract method
    public abstract boolean testCriteria() throws Exception;


    // Template method
    public final boolean runTest() throws Exception {
        System.out.println("* Running: " + this.testName);
        return this.testCriteria();
    }
}
